events {}

http {
  server {
    listen 80;

    # Route /api/user/* to user-service
    location /users/ {
      proxy_pass http://user-service:8081/;

      
	    # CORS headers
	    add_header 'Access-Control-Allow-Origin' '*' always;
	    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
	    add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept' always;
	    add_header 'Access-Control-Allow-Credentials' 'true' always;

	    # Preflight response
	    if ($request_method = OPTIONS) {
		add_header 'Access-Control-Max-Age' 86400;
		add_header 'Content-Type' 'text/plain; charset=UTF-8';
		add_header 'Content-Length' 0;
		return 204;
	    }

	    # Forward headers
	    proxy_set_header Host $host;
	    proxy_set_header X-Real-IP $remote_addr;
	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	    proxy_set_header X-Forwarded-Proto $scheme;


    }

    # Route /api/task/* to taskview-service
    location /tasks/ {
      proxy_pass http://taskview-service:8082/;

      
	    # CORS headers
	    add_header 'Access-Control-Allow-Origin' '*' always;
	    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
	    add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept' always;
	    add_header 'Access-Control-Allow-Credentials' 'true' always;

	    # Preflight response
	    if ($request_method = OPTIONS) {
		add_header 'Access-Control-Max-Age' 86400;
		add_header 'Content-Type' 'text/plain; charset=UTF-8';
		add_header 'Content-Length' 0;
		return 204;
	    }

	    # Forward headers
	    proxy_set_header Host $host;
	    proxy_set_header X-Real-IP $remote_addr;
	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	    proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Serve React app
    location / {
      proxy_pass http://frontend:3000/;

      
	    # CORS headers
	    add_header 'Access-Control-Allow-Origin' '*' always;
	    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
	    add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept' always;
	    add_header 'Access-Control-Allow-Credentials' 'true' always;

	    # Preflight response
	    if ($request_method = OPTIONS) {
		add_header 'Access-Control-Max-Age' 86400;
		add_header 'Content-Type' 'text/plain; charset=UTF-8';
		add_header 'Content-Length' 0;
		return 204;
	    }

	    # Forward headers
	    proxy_set_header Host $host;
	    proxy_set_header X-Real-IP $remote_addr;
	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	    proxy_set_header X-Forwarded-Proto $scheme;
	}
  }
}
